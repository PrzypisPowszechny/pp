# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-11-12 20:41
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PPUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('range', models.TextField(max_length=1000)),
                ('quote', models.TextField(max_length=250)),
                ('reference_type', models.CharField(choices=[(b'NORMAL', 'normalny'), (b'WARNING', 'ostrzegawczy'), (b'ALERT', 'niebezpieczny')], max_length=100)),
                ('comment', models.TextField(max_length=100)),
                ('link', models.CharField(max_length=100)),
                ('link_title', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pp.PPUser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserReferenceFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('useful', models.BooleanField()),
                ('objection', models.BooleanField()),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pp.Reference')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pp.PPUser')),
            ],
        ),
        migrations.CreateModel(
            name='UserReferenceRequestFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pp.ReferenceRequest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pp.PPUser')),
            ],
        ),
        migrations.AddField(
            model_name='reference',
            name='reference_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pp.ReferenceRequest'),
        ),
        migrations.AddField(
            model_name='reference',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pp.PPUser'),
        ),
        migrations.AlterUniqueTogether(
            name='userreferencerequestfeedback',
            unique_together=set([('user', 'reference_request')]),
        ),
        migrations.AlterUniqueTogether(
            name='userreferencefeedback',
            unique_together=set([('user', 'reference')]),
        ),
    ]
