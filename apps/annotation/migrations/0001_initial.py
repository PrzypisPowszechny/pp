# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-09-17 14:58
from __future__ import unicode_literals

import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('pp', '0026_rename_and_remove_all'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.CreateModel(
                    name='Annotation',
                    fields=[
                        ('id',
                         models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('create_date', models.DateTimeField(auto_now_add=True)),
                        ('url', models.CharField(max_length=2048)),
                        ('url_id', models.CharField(blank=True, max_length=2048)),
                        ('range', models.TextField(blank=True, max_length=1000)),
                        ('quote', models.TextField(max_length=250)),
                        ('quote_context', models.TextField(blank=True, max_length=250)),
                        ('active', models.BooleanField(default=True)),
                        ('publisher',
                         models.CharField(choices=[('PP', 'Przypis Powszechny'), ('DEMAGOG', 'Demagog')], default='PP',
                                          max_length=10)),
                        ('priority', models.CharField(
                            choices=[('NORMAL', 'normalny'), ('WARNING', 'ostrzegawczy'), ('ALERT', 'niebezpieczny')],
                            max_length=10)),
                        ('fact_category', models.CharField(
                            choices=[('NORMAL', 'normalny'), ('WARNING', 'ostrzegawczy'), ('ALERT', 'niebezpieczny')],
                            max_length=10)),
                        ('comment', models.TextField(max_length=1000)),
                        ('annotation_link', models.CharField(max_length=2048)),
                        ('annotation_link_title', models.CharField(max_length=110)),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
                migrations.CreateModel(
                    name='AnnotationReport',
                    fields=[
                        ('id',
                         models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('create_date', models.DateTimeField(auto_now_add=True)),
                        ('reason', models.CharField(
                            choices=[('BIASED', 'nieobiektywny'), ('UNRELIABLE', 'nierzetelne źródło'),
                                     ('USELESS', 'niepotrzebny'), ('SPAM', 'spam'), ('OTHER', 'inne'),
                                     ('SUGGESTED_CORRECTION', 'sugerowana poprawka')], max_length=100)),
                        ('comment', models.TextField(blank=True, max_length=1000)),
                        ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                         related_name='annotation_reports',
                                                         to='annotation.Annotation')),
                        ('user',
                         models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
                migrations.CreateModel(
                    name='AnnotationRequest',
                    fields=[
                        ('id',
                         models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('create_date', models.DateTimeField(auto_now_add=True)),
                        ('url', models.CharField(max_length=2048)),
                        ('url_id', models.CharField(blank=True, max_length=2048)),
                        ('range', models.TextField(blank=True, max_length=1000)),
                        ('quote', models.TextField(max_length=250)),
                        ('quote_context', models.TextField(blank=True, max_length=250)),
                        ('active', models.BooleanField(default=True)),
                        ('user',
                         models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
                migrations.CreateModel(
                    name='AnnotationRequestFeedback',
                    fields=[
                        ('id',
                         models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('annotation_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                                 to='annotation.AnnotationRequest')),
                        ('user',
                         models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                ),
                migrations.CreateModel(
                    name='AnnotationUpvote',
                    fields=[
                        ('id',
                         models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('create_date', models.DateTimeField(auto_now_add=True)),
                        ('annotation',
                         models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks',
                                           to='annotation.Annotation')),
                        ('user',
                         models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                ),
                migrations.CreateModel(
                    name='HistoricalAnnotation',
                    fields=[
                        ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                        ('create_date', models.DateTimeField(blank=True, editable=False)),
                        ('url', models.CharField(max_length=2048)),
                        ('url_id', models.CharField(blank=True, max_length=2048)),
                        ('range', models.TextField(blank=True, max_length=1000)),
                        ('quote', models.TextField(max_length=250)),
                        ('quote_context', models.TextField(blank=True, max_length=250)),
                        ('active', models.BooleanField(default=True)),
                        ('publisher',
                         models.CharField(choices=[('PP', 'Przypis Powszechny'), ('DEMAGOG', 'Demagog')], default='PP',
                                          max_length=10)),
                        ('priority', models.CharField(
                            choices=[('NORMAL', 'normalny'), ('WARNING', 'ostrzegawczy'), ('ALERT', 'niebezpieczny')],
                            max_length=10)),
                        ('fact_category', models.CharField(
                            choices=[('NORMAL', 'normalny'), ('WARNING', 'ostrzegawczy'), ('ALERT', 'niebezpieczny')],
                            max_length=10)),
                        ('comment', models.TextField(max_length=1000)),
                        ('annotation_link', models.CharField(max_length=2048)),
                        ('annotation_link_title', models.CharField(max_length=110)),
                        ('history_id', models.AutoField(primary_key=True, serialize=False)),
                        ('history_date', models.DateTimeField()),
                        ('history_change_reason', models.CharField(max_length=100, null=True)),
                        ('history_type',
                         models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                                          max_length=1)),
                        ('annotation_request', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                                 on_delete=django.db.models.deletion.DO_NOTHING,
                                                                 related_name='+', to='annotation.AnnotationRequest')),
                        ('history_user',
                         models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                           to=settings.AUTH_USER_MODEL)),
                        ('user', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                   on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                                   to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'verbose_name': 'historical annotation',
                        'ordering': ('-history_date', '-history_id'),
                        'get_latest_by': 'history_date',
                    },
                ),
                migrations.AddField(
                    model_name='annotation',
                    name='annotation_request',
                    field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='annotation.AnnotationRequest'),
                ),
                migrations.AddField(
                    model_name='annotation',
                    name='user',
                    field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
                migrations.AlterUniqueTogether(
                    name='annotationupvote',
                    unique_together=set([('user', 'annotation')]),
                ),
                migrations.AlterUniqueTogether(
                    name='annotationrequestfeedback',
                    unique_together=set([('user', 'annotation_request')]),
                ),
            ],
        ),
    ]
