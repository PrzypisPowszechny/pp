version: '3.5'

services:
  web:
    depends_on:
      - postgres
      - redis
    image: virtualenv
    build:
      context: .
      dockerfile: ./docker/virtualenv-Dockerfile
      args:
        - ENV_PATH=/opt/env
    ports:
      - "8000:8000"
    working_dir: /code
    volumes:
      - .:/code
      - ./docker-env:/opt/env
      - bash_history:/root
    environment:
      - DATABASE_URL=postgres://pp:pp@postgres:5432/pp
      - REDIS_URL=redis://redis:6379/0
      - ENV_PATH=/opt/env
      - PIP_ROOT=/opt/env/
      - PIP_PREFIX=./
    entrypoint:
      - ./docker/virtualenv_setup_entrypoint.sh
    # The access-logfile and error-logfile settings to make sure gunicorn does not silence any of them
    command: gunicorn
      --reload
      --bind=0.0.0.0:8000
      --log-level=info
      --access-logfile=-
      --error-logfile=-
      --config=python:wsgi
      wsgi

  worker:
    depends_on:
      - postgres
      - redis
      - web
    image: virtualenv
    working_dir: /code
    volumes:
      - .:/code
      - ./docker-env:/opt/env
      - bash_history:/root
    environment:
      - DATABASE_URL=postgres://pp:pp@postgres:5432/pp
      - REDIS_URL=redis://redis:6379/0
      - ENV_PATH=/opt/env
      - PIP_ROOT=/opt/env/
      - PIP_PREFIX=./
      - C_FORCE_ROOT=TRUE
    entrypoint:
      - ./docker/virtualenv_setup_entrypoint.sh
    command: celery worker --app=worker.celery_app --loglevel=info --concurrency=2

  worker_beat:
    depends_on:
      - postgres
      - redis
      - web
    image: virtualenv
    working_dir: /code
    volumes:
      - .:/code
      - ./docker-env:/opt/env
      - bash_history:/root
    environment:
      - DATABASE_URL=postgres://pp:pp@postgres:5432/pp
      - REDIS_URL=redis://redis:6379/0
      - ENV_PATH=/opt/env
      - PIP_ROOT=/opt/env/
      - PIP_PREFIX=./
      - C_FORCE_ROOT=TRUE
    entrypoint:
      - ./docker/virtualenv_setup_entrypoint.sh
    command: celery beat --app=worker.celery_app --loglevel=info

  redis:
    image: "redis:alpine"
    volumes:
      - ./data/redis:/data

  postgres:
    image: "postgres:10-alpine"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pp
      - POSTGRES_PASSWORD=pp
      - POSTGRES_DB=pp

volumes:
  bash_history: